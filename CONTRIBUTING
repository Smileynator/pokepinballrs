## Prerequisites
As much as we would love to take contributions of time and effort from anyone, the reality is that without technical knowledge about Assembly, Programming, and Hex Editing files, there is really not much you can add besides cheering from the sideline.
With that common question out of the way, let's talk contribution.
We make the assumption you know how to work github and a basic code project in your prefered IDE.

## Decompilation
To decompile a function, simply decide on a single assembly function to decompile.

### decomp.me
If you want to use Decomp.me like most, you can follow the instructions below. Otherwise use whatever works for you and skip this section.
Go to decomp.me and create a new scratch, there should be a GBA preset for this game you can select.
Paste the assembly function, give the scratch the name of the function and add the context.
The context can either be added manually, or generated by using m2ctx.py
Note that m2ctx.py is vague about how to use it. In this project it means you need to put it straight into the Tools folder and nowhere else.
Some functions will contain named variables that decomp.me cannot figure out and will refuse to generate the scratch. To fix this, simply look up the value in the project and replace it with the hex value it represents.

### Integration in the project
Work your magic to decompile the code. Once done, you can put it back in your IDE.
Make the relevant changes in the ASM file by removing the function you decompiled and add or rename a .section to match the starting address of the next function.
Make the same relevant changes to â€Žld_script.txt to match the section labels.
Define any relevant functions you used in functions.h and any structure changes in global.h etc.
Try to keep coherent blocks of code together in the same file in order of the offset in the rom.
We do want to put code together in logical classes, when something should clearly be grouped in such way you can try and do so, or bring it up as a discussion in the discord.

## Formatting
- 4 spaces instead of tabs
- Brackets on new lines
- Verbose naming, following existing patterns, usually this means matching the hex address/offset the unknown element is at.
- Keep speculation of variables names to a minimum to keep misinformation by accident from happening.

## Non decompile work
At time of writing a lot of Data in the rom requires naming, detailing, tooling, or simply exports.
The goal is that all data is in a workable format (like images in PNG with a palette) to then compile back into the rom during the make process.
For details, join the discussion on discord.
